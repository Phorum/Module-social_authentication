[provider]

; The name of the provider.
name           = "Twitter"

; The authentication protocol that the provider supports.
; This is one of: openid, oauth
protocol       = "oauth"

; The URL to use for the authentication protocol. If the username
; is part of the URL, then the string "{username}" can be used to
; indicate where the username must be put.
url            = "http://twitter.com"

[oauth]

; Default consumer key and secret. These have been registered for
; an application named "Phorum Social Authentication". We advice
; admins that use the Social Authentication module to register their
; own key and secret for Twitter.
consumer_key      = "UuEf7DBPdd2Ql1K3LFcNAw"
consumer_secret   = "1341QKn56evopXbDFMZyB99oKKEtn4sIuVlMG2gEhA"

; Server URI definitions.
server_uri        = "http://twitter.com"
request_token_uri = "http://twitter.com/oauth/request_token" 
authorize_uri     = "http://twitter.com/oauth/authenticate" 
access_token_uri  = "http://twitter.com/oauth/access_token" 

; The URL from which to retrieve the user's profile info.
profile_data_uri  = "http://twitter.com/account/verify_credentials.json"

; The format of the profile info response body.
profile_format    = "json"

; Fields to extract from the profile data. The value FALSE can be
; used to indicate that the field is not available in the profile data.
field_auth_id   = "screen_name"
field_nickname  = "screen_name"
field_fullname  = "name"
field_email     = false

[gui]

; The type of interaction that the GUI requires for this provider:
; - username : the user needs to enter a username, which will be used in the
;              authentication URL
; - url      : the user must enter the full authentication URL
; - redirect : the user does not have to enter anything, but is redirected
;              to the authentication provider URL
type           = "redirect"

; The type of prompt to use for referencing the data that the user must
; enter. Options are: UserName, ScreenName, BlogName, OpenID
; Not needed for type "redirect".
;prompt         = ""

; Rewrites can be used to rewrite an OpenID URL that the user entered.
; Using rewrites, common mistakes can be corrected, e.g. users entering
; their gmail.com email address when trying to use OpenID.
;
; The keys that are used in this section are irrelevant. They only need
; to be unique. The values provide regular expressions to match the
; entered URL against.
;
; When a matching rewrite rule is encountered, then the OpenID URL
; is replaced with the URL for this provider.
;
; When the regular expression creates a group for backreferencing like
; "/^(\w+)@somedomain.com$/", then this (\w+) group (or the first group
; in case there are more) is used to replace "{username}" in the provider
; URL for this provider.
;
[rewrite_openid]
